import os
import requests
import io
import base64  # Added this import
from PIL import Image
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Get the API key from environment variables
api_key = os.getenv("STABILITY_API_KEY")

# Debugging: Print the API key (be careful with this in production!)
print(f"Loaded API key: {api_key}")

# If you don't want to use environment variables, you can hardcode your API key here (not recommended for security reasons)
# api_key = "your-api-key-here"

# API endpoint
api_host = 'https://api.stability.ai'
engine_id = 'stable-diffusion-xl-1024-v1-0'

# Function to generate image
def generate_lotr_image(prompt):
    response = requests.post(
        f"{api_host}/v1/generation/{engine_id}/text-to-image",
        headers={
            "Content-Type": "application/json",
            "Accept": "application/json",
            "Authorization": f"Bearer {api_key}"
        },
        json={
            "text_prompts": [{"text": prompt}],
            "cfg_scale": 7,
            "height": 1024,
            "width": 1024,
            "samples": 1,
            "steps": 30,
        },
    )

    # Debugging: Print the full response
    print(f"Response status code: {response.status_code}")
    print(f"Response content: {response.text}")

    if response.status_code != 200:
        raise Exception("Non-200 response: " + str(response.text))

    data = response.json()
    
    for i, image in enumerate(data["artifacts"]):
        img = Image.open(io.BytesIO(base64.b64decode(image["base64"])))
        img.save(f"lotr_generated_image_{i}.png")
        print(f"Image saved as lotr_generated_image_{i}.png")

# Main execution
if __name__ == "__main__":
    prompt = "A dramatic scene from Game of Thrones with dragons, castles, and characters in a medieval fantasy setting"
    generate_lotr_image(prompt)
    print("Image generation complete!")